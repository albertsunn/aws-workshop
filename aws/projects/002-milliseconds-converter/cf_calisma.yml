


AWSTemplateFormatVersion: 2010-09-09
Description: The Milliseconds Converter Application aims to convert the given time in milliseconds into hours, minutes, and seconds. The application is to be coded in Python and deployed as a web application with Flask on AWS Application Load Balancer with Auto Scaling Group of Elastic Compute Cloud (EC2) Instances using AWS Cloudformation Service.

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VpcId of your existing Virtual Private Cloud (VPC)
  
Resources:

  MillisecondAutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      LaunchConfigurationName: !Ref MillisecondLaunchConfig
      HealthCheckType: ELB
      HealthCheckGracePeriod: 90
      DesiredCapacity: '2'
      MinSize: '1'
      MaxSize: '3'
      TargetGroupARNs:
        - !Ref MillisecondElb
  

  MillisecondLaunchConfig:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      ImageId: ami-0c94855ba95c71c99
      InstanceType: t2.micro
      KeyName: ss.pem  #XXXXXXXXXXXXXXXXXXXX
      SecurityGroups:
        - !Ref MillisecondSecGrb

      Key: Name
      Value: Web Server of ${AWS::StackName}
    

      UserData: !Base64 |
        #!/bin/bash
        mkdir templates
        cd templates
        wget https://raw.githubusercontent.com/E2022Cihan/Repom/master/aws/projects/002-milliseconds-converter/templates/index.html
        wget https://raw.githubusercontent.com/E2022Cihan/Repom/master/aws/projects/002-milliseconds-converter/templates/result.html
        cd ..
        wget https://raw.githubusercontent.com/E2022Cihan/Repom/master/aws/projects/002-milliseconds-converter/app.py
        sudo yum update -y
        sudo yum install python3 -y
        sudo pip3 install flask
        sudo python3 app.py
        



  MillisecondLoadBalancer:
    Type: "AWS::ElasticLoadBalancing::LoadBalancer"
    Properties:
      SecurityGroups:
        - !GetAtt MillisecondSecGrb.GroupId
  


  
  MillisecondListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions: 
        - Type: forward
          TargetGroupArn: !Ref MillisecondElb
      LoadBalancerArn: !Ref MillisecondLoadBalancer
      Port: 80
      Protocol: HTTP
  
  

  
  MillisecondElb:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 25
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 3
      VpcId: !Ref VpcId
  
  
  
  MillisecondSecGrb:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Millisecond SSH and HTTP secgroup
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80 
          ToPort: 80
          CidrIp: 0.0.0.0/0
  
  
Outputs:
  URL:
    Description: The URL of the website
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt MillisecondLoadBalancer.DNSName